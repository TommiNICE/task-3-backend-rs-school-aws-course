openapi: 3.0.0
info:
  title: Products Service
  description: API for managing products
  version: 1.0.0

paths:
  /products:
    get:
      summary: Get all products
      description: Returns a list of all available products
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductWithStock'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      summary: Create a new product
      description: Creates a new product with stock information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product created successfully"
                  product:
                    $ref: '#/components/schemas/ProductWithStock'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Validation failed"
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["Title must be a string", "Price must be a number"]
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products/{id}:
    get:
      summary: Get product by ID
      description: Returns a single product by its ID
      parameters:
        - name: id
          in: path
          description: ID of the product to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductWithStock'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        title:
          type: string
          example: "Gaming Laptop"
        description:
          type: string
          example: "High-performance gaming laptop with RTX 4080"
        price:
          type: number
          format: float
          example: 1999.99
      required:
        - id
        - title
        - description
        - price

    Stock:
      type: object
      properties:
        productId:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        stock:
          type: integer
          example: 10
      required:
        - productId
        - stock

    ProductWithStock:
      type: object
      properties:
        id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        title:
          type: string
          example: "Gaming Laptop"
        description:
          type: string
          example: "High-performance gaming laptop with RTX 4080"
        price:
          type: number
          format: float
          example: 1999.99
        count:
          type: integer
          example: 10
      required:
        - id
        - title
        - description
        - price
        - count

    ProductInput:
      type: object
      properties:
        title:
          type: string
          example: "Gaming Laptop"
        description:
          type: string
          example: "High-performance gaming laptop with RTX 4080"
        price:
          type: number
          format: float
          example: 1999.99
        count:
          type: integer
          example: 10
      required:
        - title
        - description
        - price

    Error:
      type: object
      properties:
        message:
          type: string
          example: "Internal server error"
      required:
        - message

servers:
  - url: https://34gbyo6wre.execute-api.eu-north-1.amazonaws.com/prod
    variables:
      apiId:
        description: API Gateway ID
        default: 34gbyo6wre
      region:
        description: AWS Region
        default: eu-north-1
      stage:
        description: API Stage
        default: prod
